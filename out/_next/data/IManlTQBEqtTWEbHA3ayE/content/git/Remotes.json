{"pageProps":{"contentData":{"topic":"git","page":"3-Remotes.md","contentHtml":"<h1>Git - Remotes</h1>\n<p>Remote repositories are versions of your project that are hosted in a server connected to the Internet or elsewhere. Project collaboration usually involves managing these remote repositories and pushing and pulling data to and from them when you need to share work.</p>\n<h2>List Remotes</h2>\n<p>To see which remote servers you have configured, we run the <code>git remote</code> command. If your repository was cloned then you should at least see <code>origin</code>, which is the default name Git gives to the server you cloned from:</p>\n<pre><code class=\"language-shell\">$ git clone https://github.com/cs-ieee-ist/cs-essentials.git\r\nCloning into 'cs-essentials'...\r\nremote: Enumerating objects: 18, done.\r\nremote: Counting objects: 100% (18/18), done.\r\nremote: Compressing objects: 100% (14/14), done.\r\nremote: Total 1661 (delta 7), reused 14 (delta 3), pack-reused 1643\r\nReceiving objects: 100% (1661/1661), 3.35 MiB | 3.42 MiB/s, done.\r\nResolving deltas: 100% (862/862), done.\r\n$ cd cs-essentials\r\n$ git remote\r\norigin\n</code></pre>\n<p>To show the URLs, for reading and writing, that Git has stored for the shortname we add the flag <code>-v</code>:</p>\n<pre><code class=\"language-shell\">$ git remote -v\r\norigin  https://github.com/cs-ieee-ist/cs-essentials.git (fetch)\r\norigin  https://github.com/cs-ieee-ist/cs-essentials.git (push)\n</code></pre>\n<h2>Add Remote</h2>\n<p>To add a new remote repository we run <code>git remote add &#x3C;shortname> &#x3C;url></code>:</p>\n<pre><code class=\"language-shell\">$ git remote add new-remote https://github.com/cs-ieee-ist/cs-essentials.git\r\n$ git remote -v\r\nnew-remote      https://github.com/cs-ieee-ist/cs-essentials.git (fetch)\r\nnew-remote      https://github.com/cs-ieee-ist/cs-essentials.git (push)\r\norigin  https://github.com/cs-ieee-ist/cs-essentials.git (fetch)\r\norigin  https://github.com/cs-ieee-ist/cs-essentials.git (push)\n</code></pre>\n<h2>Fetch and Pull from a Remote</h2>\n<p>To fetch all the information in a remote we use the <code>git fetch new-remote</code> command:</p>\n<pre><code class=\"language-shell\">From https://github.com/cs-ieee-ist/cs-essentials\r\n * [new branch]      bash       -> new-remote/bash\r\n * [new branch]      gdb        -> new-remote/gdb\r\n * [new branch]      gh-pages   -> new-remote/gh-pages\r\n * [new branch]      git        -> new-remote/git\r\n * [new branch]      master     -> new-remote/master\r\n * [new branch]      valgrind   -> new-remote/valgrind\r\n * [new branch]      vim        -> new-remote/vim\n</code></pre>\n<p>This command will pull down all the data from the remote, after running the command we will have references to all the branches from that remote. After fetching the data we can now modify our project to do that we use the <code>git merge &#x3C;shortname>/&#x3C;branch></code> command:</p>\n<pre><code class=\"language-shell\">$ git merge new-remote/master\n</code></pre>\n<p>If the remote branch, you want to fetch and merge, is the one the current branch is set up to track, you can simply use the <code>git pull</code> command. This will automatically fetch and then merge the remote branch into your current branch. For example, by default, the git clone command automatically sets up your local master branch to track the remote master branch on the server you cloned from.</p>\n<pre><code>$ git pull\n</code></pre>\n<h2>Push to a Remote</h2>\n<p>To push the changes upstream to a remote we use the <code>git push &#x3C;remote> &#x3C;branch></code> command. If you want to push your master branch to your origin server,  (again, cloning generally sets up both of those names for you automatically), then you can run this to push any commits you've done back up to the server:</p>\n<pre><code class=\"language-shell\">$ git push origin master\n</code></pre>\n<p>Just like the <code>git pull</code> if you want to push to a remote branch that is the one that the current branch is set up to track, you just need to use the <code>git push</code> command:</p>\n<pre><code class=\"language-shell\">$ git push\n</code></pre>\n<p><strong>Attention</strong></p>\n<p>This commands only work when you have write or read permissions.</p>\n<h2>Remove Remote</h2>\n<p>To a remove a remote we can either use the <code>git remote remove</code> command:</p>\n<pre><code class=\"language-shell\">$ git remote remove new-remote\r\n$ git remote\r\norigin\n</code></pre>\n<p>You can read the <a href=\"https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes\">Book</a> for more in-depth information</p>"},"topicPages":[{"topic":"git","page":"Introduction"},{"topic":"git","page":"Basics"},{"topic":"git","page":"Branching"},{"topic":"git","page":"Remotes"},{"topic":"git","page":"Commands"}]},"__N_SSG":true}