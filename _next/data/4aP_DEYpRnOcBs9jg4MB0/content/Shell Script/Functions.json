{"pageProps":{"contentData":{"topic":"Shell Script","page":"3-Functions.md","contentHtml":"<h1>Functions - Shell Script</h1>\n<p>What is called a function in shell might be called in some languages procedures, and functions.</p>\n<h2>Simple Function</h2>\n<pre><code class=\"language-bash\">#!/bin/sh\r\n\r\n# Definition\r\nhello () { \r\n  echo \"Hello World!\"\r\n}\r\n\r\n# Invocation\r\nhello\n</code></pre>\n<p><strong>Run file:</strong></p>\n<pre><code class=\"language-shell\">$ ./example.sh\r\nHello World!\n</code></pre>\n<h2>Function with parameters</h2>\n<p>We can also define a function with parameters. The parameters work like the parameters of the shell file, $1, $2 and so on.</p>\n<pre><code class=\"language-bash\">#!/bin/sh\r\n\r\nadd () {\r\n   echo $1 + $2 = $(($1 + $2))\r\n}\r\n\r\nadd 2 4\n</code></pre>\n<p><strong>Run file:</strong></p>\n<pre><code class=\"language-shell\">$ ./example.sh\r\n2 + 4 = 6\n</code></pre>\n<h1>Function with Returning Values</h1>\n<p>Functions can return a value in one of four different ways:</p>\n<ul>\n<li>Change the value of variables</li>\n<li>Use the exit command to end the shell script</li>\n<li>Use the return command to end the function, and return the value</li>\n<li>echo output to stdout, which will be caught by the caller</li>\n</ul>\n<h3>Change Variables</h3>\n<p>Like in Javascript (non-strict mode) there is no scope of variables, except the parameters ($1, $2, $@, etc). This allows us to change and define variables inside the function which can be useful sometimes.</p>\n<pre><code class=\"language-bash\">#!/bin/bash\r\n\r\nhello () {\r\n  msg='Hello World!'\r\n}\r\n\r\nhello\r\necho $msg\n</code></pre>\n<p><strong>Run file:</strong></p>\n<pre><code class=\"language-shell\">$ ./example.sh\r\nHello World\n</code></pre>\n<h3>Return command</h3>\n<p>The return command can return a code (number)</p>\n<pre><code class=\"language-bash\">#!/bin/bash\r\n\r\nhello() {\r\n  if [ $1 == \"world\" ]\r\n  then\r\n    return 1\r\n  elif [ $1 == \"there\" ]\r\n  then\r\n    return 2\r\n  fi\r\n  return 0\r\n}\r\n\r\nhello there\r\nHELLO_RETURN=$?\r\nif [ $HELLO_RETURN == 1 ]\r\nthen\r\n  echo hi\r\nelif [ $HELLO_RETURN == 2 ]\r\nthen\r\n  echo General Kenoby\r\nelse\r\n  echo ...\r\nfi\n</code></pre>\n<p><strong>Run file:</strong></p>\n<pre><code class=\"language-shell\">$ ./example.sh\r\nGeneral Kenobi\n</code></pre>\n<p><strong>Useful Links:</strong></p>\n<ul>\n<li><a href=\"https://www.shellscript.sh/functions.html\">Functions - shellscript.sh</a></li>\n<li><a href=\"https://www.tutorialspoint.com/unix/unix-shell-functions.htm\">Functions - tutorialspoint.com</a></li>\n</ul>"},"topicPages":[{"topic":"Shell Script","page":"Introduction"},{"topic":"Shell Script","page":"Variables"},{"topic":"Shell Script","page":"Loops And Ifs"},{"topic":"Shell Script","page":"Functions"}]},"__N_SSG":true}