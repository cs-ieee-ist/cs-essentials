{"pageProps":{"contentData":{"topic":"git","page":"2-Branching.md","contentHtml":"<h1>Git - Branching</h1>\n<p>A branch is a line of development which you can use to do some work without messing with the mainline, for example, the master branch. You can think of a branch as a new working directory that diverges from the original directory when you create it. Or, if you like it better, you can think of a branch as a pointer for a commit.</p>\n<p>You can read the <a href=\"https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell\">Book</a> for more in-depth information</p>\n<h2>Start project</h2>\n<p>Let's create a new project</p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$ </span><span class=\"bash\">git init</span>\r<span class=\"hljs-meta\">\n$ </span><span class=\"bash\"><span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"New Project\"</span> > README.md</span>\r<span class=\"hljs-meta\">\n$ </span><span class=\"bash\">git add *</span>\r<span class=\"hljs-meta\">\n$ </span><span class=\"bash\">git commit -m <span class=\"hljs-string\">\"first commit\"</span></span>\n</code></pre>\n<h2>Create a Branch</h2>\n<p>To create a branch we user the <code>git branch &#x3C;branch-name></code> command:</p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$ </span><span class=\"bash\">git branch contribute</span>\n</code></pre>\n<p>Well done, you just created your first branch. If we run the <code>git branch</code> command the new branch will appear:</p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$ </span><span class=\"bash\">git branch</span>\r\n* master\r\n  contribute\n</code></pre>\n<p>But, we are still at the <code>master</code> branch. To switch to the new branch we need to use the <code>git checkout &#x3C;branch-name></code>:</p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$ </span><span class=\"bash\">git checkout contribute</span>\r<span class=\"hljs-meta\">\n$ </span><span class=\"bash\">git branch</span>\r\n  master\r\n* contribute\n</code></pre>\n<p>Now new commits made to the <code>contribute</code> won't be in the <code>master</code> branch, at least for now.</p>\n<h3>Make a new commit</h3>\n<p>Let's add a new <code>CONTRIBUTING.md</code> file.</p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$ </span><span class=\"bash\"><span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Contribute\"</span> > CONTRIBUTING.md</span>\r<span class=\"hljs-meta\">\n$ </span><span class=\"bash\">git add *</span>\r<span class=\"hljs-meta\">\n$ </span><span class=\"bash\">git commit -m <span class=\"hljs-string\">\"add Contributing.md\"</span></span>\n</code></pre>\n<h2>Merge</h2>\n<p>So, we have made all the changes we wanted without interfering with the work being made at the <code>master</code>. But now we want to merge these new changes. To do that we use the <code>git merge &#x3C;branch-name></code> command, this command will merge the histories of the current branch and the branch specified at the command and save it in the current branch's history. So, we are going to switch to the <code>master</code> and then merge the <code>contribute</code>.</p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$ </span><span class=\"bash\">git checkout master</span>\r<span class=\"hljs-meta\">\n$ </span><span class=\"bash\">git merge contribute</span>\n</code></pre>\n<p>You can read the <a href=\"https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell\">Book</a> for more in-depth information</p>"},"topicPages":[{"topic":"git","page":"Introduction"},{"topic":"git","page":"Basics"},{"topic":"git","page":"Branching"},{"topic":"git","page":"Remotes"},{"topic":"git","page":"Commands"}]},"__N_SSG":true}