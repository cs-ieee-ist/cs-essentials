{"pageProps":{"contentData":{"topic":"gdb","page":"0-Introduction.md","contentHtml":"<h1>GDB - Introduction</h1>\n<p>GDB (GNU Debugger) is a debugger that, like many others, allows you to watch in depth what a program is doing while in execution.\r\nAccording to GDB's documentation, it can do four main kinds of things to help you catch bugs in the act:</p>\n<ul>\n<li>Start your program, specifying anything that might affect its behaviour.</li>\n<li>Make your program stop on specified conditions.</li>\n<li>Examine what has happened, when your program has stopped.</li>\n<li>Change things in your program, so you can experiment with correcting the effects of one bug and go on to learn about another.</li>\n</ul>\n<p>Let's start using GDB with a very simple program:</p>\n<h3>Program</h3>\n<pre><code class=\"hljs language-c\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&#x3C;stdio.h></span></span>\r\n\r\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title hljs-function\">main</span><span class=\"hljs-params\">()</span> {\r\n    <span class=\"hljs-type\">int</span> a = <span class=\"hljs-number\">1</span>;\r\n    a = a + <span class=\"hljs-number\">2</span>;  \r\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">\"a: %d\\n\"</span>, a);\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\r\n}\n</code></pre>\n<h3>Compile and run:</h3>\n<p>To compile we will use GCC, but to debug using GDB we need to add the flag \"-g\". This flag enables the use of extra debugging information that GDB will use.</p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$ </span><span class=\"bash\">gcc -g hello.c</span>\r<span class=\"hljs-meta\">\n$ </span><span class=\"bash\">./a.out</span>\r\na: 3\n</code></pre>\n<h3>GDB</h3>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$ </span><span class=\"bash\">gdb ./a.out</span>\r\n(gdb) \n</code></pre>\n<p><strong>Running the program</strong></p>\n<p>Now that we have GDB open we can start running the program using the \"run\" command.</p>\n<pre><code class=\"hljs language-shell\">(gdb) run\r\na: 3\n</code></pre>\n<p><strong>Breakpoints</strong></p>\n<p>Breakpoints are places in code, for example, a line in the code, that you can specify and whenever the computer reaches a breakpoint, it pauses before executing the specified line and shows the debugger prompt. To create a breakpoint we use the \"break\" command.</p>\n<pre><code class=\"hljs language-bash\">(gdb) <span class=\"hljs-built_in\">break</span> hello.c:5\n</code></pre>\n<p><strong>Analyse Data</strong></p>\n<p>Now that we have a breakpoint we can run the program again and start analysing the data.</p>\n<pre><code class=\"hljs language-shell\">(gdb) run\r\nBreakpoint 1, main () at hello.c:5\r\n5               a = a + 2;\n</code></pre>\n<p>To see the current value stored at the variable \"a\" we use the \"print\" command.</p>\n<pre><code class=\"hljs language-shell\">(gdb) print a\r<span class=\"hljs-meta\">\n$</span><span class=\"bash\">1 = 1;</span>\n</code></pre>\n<p>Remember that the current line has not executed yet. So if we want to execute the current line and stop at the next one we run the \"next\" command.</p>\n<pre><code class=\"hljs language-shell\">(gdb) next\r\n6    printf(\"a: %d\\n\", a);\n</code></pre>\n<p>If we print the variable \"a\" again we should see a different value.</p>\n<pre><code class=\"hljs language-shell\">(gdb) print a\r<span class=\"hljs-meta\">\n$</span><span class=\"bash\">2 = 3</span>\n</code></pre>\n<p>Everything worked as expected, now we can continue the execution using the \"continue\" command, which will resume the execution of the program until a breakpoint is hit.</p>\n<pre><code class=\"hljs language-shell\">(gdb) continue\r\nContinuing.\r\na: 3\n</code></pre>"},"topicPages":[{"topic":"gdb","page":"Introduction"},{"topic":"gdb","page":"Commands"},{"topic":"gdb","page":"Core Files"},{"topic":"gdb","page":"GUI"},{"topic":"gdb","page":"Assembly"}]},"__N_SSG":true}