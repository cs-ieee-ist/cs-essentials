{"pageProps":{"contentData":{"topic":"Shell Script","page":"3-Functions.md","contentHtml":"<h1>Functions - Shell Script</h1>\n<p>What is called a function in shell might be called in some languages procedures, and functions.</p>\n<h2>Simple Function</h2>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/sh\n</span>\n<span class=\"hljs-comment\"># Definition</span>\n<span class=\"hljs-function\"><span class=\"hljs-title\">hello</span></span> () { \n  <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Hello World!\"</span>\n}\n\n<span class=\"hljs-comment\"># Invocation</span>\nhello</code></pre>\n<p><strong>Run file:</strong></p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> ./example.sh</span>\nHello World!</code></pre>\n<h2>Function with parameters</h2>\n<p>We can also define a function with parameters. The parameters work like the parameters of the shell file, $1, $2 and so on.</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/sh\n</span>\n<span class=\"hljs-function\"><span class=\"hljs-title\">add</span></span> () {\n   <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$1</span> + <span class=\"hljs-variable\">$2</span> = $((<span class=\"hljs-variable\">$1</span> + <span class=\"hljs-variable\">$2</span>))\n}\n\nadd 2 4</code></pre>\n<p><strong>Run file:</strong></p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> ./example.sh</span>\n2 + 4 = 6</code></pre>\n<h1>Function with Returning Values</h1>\n<p>Functions can return a value in one of four different ways:</p>\n<ul>\n<li>Change the value of variables</li>\n<li>Use the exit command to end the shell script</li>\n<li>Use the return command to end the function, and return the value</li>\n<li>echo output to stdout, which will be caught by the caller</li>\n</ul>\n<h3>Change Variables</h3>\n<p>Like in Javascript (non-strict mode) there is no scope of variables, except the parameters ($1, $2, $@, etc). This allows us to change and define variables inside the function which can be useful sometimes.</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/bash\n</span>\n<span class=\"hljs-function\"><span class=\"hljs-title\">hello</span></span> () {\n  msg=<span class=\"hljs-string\">'Hello World!'</span>\n}\n\nhello\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$msg</span></code></pre>\n<p><strong>Run file:</strong></p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> ./example.sh</span>\nHello World</code></pre>\n<h3>Return command</h3>\n<p>The return command can return a code (number)</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/bash\n</span>\n<span class=\"hljs-function\"><span class=\"hljs-title\">hello</span></span>() {\n  <span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$1</span> == <span class=\"hljs-string\">\"world\"</span> ]\n  <span class=\"hljs-keyword\">then</span>\n    <span class=\"hljs-built_in\">return</span> 1\n  <span class=\"hljs-keyword\">elif</span> [ <span class=\"hljs-variable\">$1</span> == <span class=\"hljs-string\">\"there\"</span> ]\n  <span class=\"hljs-keyword\">then</span>\n    <span class=\"hljs-built_in\">return</span> 2\n  <span class=\"hljs-keyword\">fi</span>\n  <span class=\"hljs-built_in\">return</span> 0\n}\n\nhello there\nHELLO_RETURN=$?\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$HELLO_RETURN</span> == 1 ]\n<span class=\"hljs-keyword\">then</span>\n  <span class=\"hljs-built_in\">echo</span> hi\n<span class=\"hljs-keyword\">elif</span> [ <span class=\"hljs-variable\">$HELLO_RETURN</span> == 2 ]\n<span class=\"hljs-keyword\">then</span>\n  <span class=\"hljs-built_in\">echo</span> General Kenoby\n<span class=\"hljs-keyword\">else</span>\n  <span class=\"hljs-built_in\">echo</span> ...\n<span class=\"hljs-keyword\">fi</span></code></pre>\n<p><strong>Run file:</strong></p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> ./example.sh</span>\nGeneral Kenobi</code></pre>\n<p><strong>Useful Links:</strong></p>\n<ul>\n<li><a href=\"https://www.shellscript.sh/functions.html\">Functions - shellscript.sh</a></li>\n<li><a href=\"https://www.tutorialspoint.com/unix/unix-shell-functions.htm\">Functions - tutorialspoint.com</a></li>\n</ul>\n"},"topicPages":[{"topic":"Shell Script","page":"Introduction"},{"topic":"Shell Script","page":"Variables"},{"topic":"Shell Script","page":"Loops And Ifs"},{"topic":"Shell Script","page":"Functions"}]},"__N_SSG":true}